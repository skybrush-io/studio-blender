"""The operator provided in this file exports drone show trajectories and light
animation to a simple (zipped) .csv format compatible with the Skybrush suite.

The primary and recommended drone show format of the Skybrush suite is the
Skybrush Compiled Format (.skyc), which is much more versatile and optimized
than the simple text output generated by this script.

This script is created for those who want to use their own scripts or tools for
post-processing.
"""

from typing import Any

from bpy.props import StringProperty, FloatProperty

from sbstudio.model.file_formats import FileFormat

from .base import ExportOperator

__all__ = ("SkybrushCSVExportOperator",)


#############################################################################
# Operator that allows the user to invoke the CSV export operation
#############################################################################


class SkybrushCSVExportOperator(ExportOperator):
    """Export object trajectories and light animation into a Skybrush-compatible simple CSV format"""

    bl_idname = "export_scene.skybrush_csv"
    bl_label = "Export Skybrush CSV"
    bl_options = {"REGISTER"}

    # List of file extensions that correspond to Skybrush CSV files (zipped)
    filter_glob = StringProperty(default="*.zip", options={"HIDDEN"})
    filename_ext = ".zip"

    # output frame rate
    output_fps = FloatProperty(
        name="Frame rate",
        default=4,
        description="Number of samples to take from trajectories and lights per second",
    )

    def get_format(self) -> FileFormat:
        return FileFormat.CSV

    def get_operator_name(self) -> str:
        return "CSV exporter"

    def get_settings(self) -> dict[str, Any]:
        return {
            "output_fps": self.output_fps,
            "light_output_fps": self.output_fps,
        }
